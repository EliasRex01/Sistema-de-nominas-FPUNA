-- tabla EMPLEADOS
CREATE TABLE EMPLEADOS (
    ID_EMPLEADO     NUMBER(7) CONSTRAINT PK_EMPLEADOS PRIMARY KEY,
    CEDULA          VARCHAR2(20) CONSTRAINT UQ_EMPLEADOS_CEDULA UNIQUE,  
    NOMBRE          VARCHAR2(30) NOT NULL,
    APELLIDO        VARCHAR2(30) NOT NULL,
    FEC_INGRESO     DATE NOT NULL,
    DIRECCION       VARCHAR2(60), 
	ID_CARGO        NUMBER(7)
);

-- tabla DEPARTAMENTOS
CREATE TABLE DEPARTAMENTOS (
    ID_DEPARTAMENTO      NUMBER(7) CONSTRAINT PK_DEPARTAMENTOS PRIMARY KEY,
    NOMBRE_DEPARTAMENTO  VARCHAR2(100) NOT NULL
);

-- tabla CARGOS
CREATE TABLE CARGOS (
    ID_CARGO        NUMBER(7) CONSTRAINT PK_CARGOS PRIMARY KEY,
    NOMBRE_CARGO    VARCHAR2(100) NOT NULL,
    ID_DEPARTAMENTO NUMBER(7) NOT NULL,
    CONSTRAINT FK_CARGO_DEPARTAMENTO FOREIGN KEY (ID_DEPARTAMENTO) 
        REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
);

-- tabla CONCEPTOS
CREATE TABLE CONCEPTOS (
    COD_CONCEPTO   NUMBER(7) CONSTRAINT PK_CONCEPTOS PRIMARY KEY,
    DESCRIPCION    VARCHAR2(100) NOT NULL,
    FIJO           CHAR(1) CHECK (FIJO IN ('S', 'N')),
    PORCENTAJE     NUMBER(5,2),
    DEB_CREDITO    CHAR(1) CHECK (DEB_CREDITO IN ('D', 'C')),
    IPS            CHAR(1) CHECK (IPS IN ('S', 'N'))
);

-- tabla NOVEDADES
CREATE TABLE NOVEDADES (
    ID_NOVEDAD     NUMBER(7) CONSTRAINT PK_NOVEDADES PRIMARY KEY,
    COD_CONCEPTO   NUMBER(7) NOT NULL,
    MONTO          NUMBER(10,2) NOT NULL,
    CEDULA         VARCHAR2(20) NOT NULL,  
    FECHA_INI      DATE NOT NULL,
    FECHA_FIN      DATE,
    CONSTRAINT FK_NOVEDADES_CONCEPTO FOREIGN KEY (COD_CONCEPTO) 
        REFERENCES CONCEPTOS(COD_CONCEPTO),
    CONSTRAINT FK_NOVEDADES_EMPLEADO FOREIGN KEY (CEDULA) 
        REFERENCES EMPLEADOS(CEDULA)
);

-- tabla LIQUIDACION
CREATE TABLE LIQUIDACION (
    COD_LIQUIDACION     NUMBER(7) CONSTRAINT PK_LIQUIDACION PRIMARY KEY,
    CEDULA              VARCHAR2(20) NOT NULL,
    FECHA_LIQUIDACION   DATE NOT NULL,
    DEBITO              NUMBER(10,2),
    CREDITO             NUMBER(10,2),
    NETO                NUMBER(10,2),
    CONSTRAINT FK_LIQUIDACION_EMPLEADO FOREIGN KEY (CEDULA) 
        REFERENCES EMPLEADOS(CEDULA)
);

-- sequencias
CREATE SEQUENCE SEQ_ID_EMPLEADO START WITH 1 INCREMENT BY 1 
NOCACHE NOCYCLE; 
CREATE SEQUENCE SEQ_ID_NOVEDAD START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_COD_LIQUIDACION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ID_CARGO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ID_DEPARTAMENTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_COD_CONCEPTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ID_EMPLEADO START WITH 1 INCREMENT BY 1;

-- Triggers
CREATE OR REPLACE TRIGGER TRG_ID_EMPLEADO 
BEFORE INSERT ON EMPLEADOS 
FOR EACH ROW 
BEGIN
    SELECT SEQ_ID_EMPLEADO.NEXTVAL INTO :NEW.ID_EMPLEADO FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ID_NOVEDAD 
BEFORE INSERT ON NOVEDADES 
FOR EACH ROW 
BEGIN
    SELECT SEQ_ID_NOVEDAD.NEXTVAL INTO :NEW.ID_NOVEDAD FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_COD_LIQUIDACION 
BEFORE INSERT ON LIQUIDACION 
FOR EACH ROW 
BEGIN
    SELECT SEQ_COD_LIQUIDACION.NEXTVAL INTO :NEW.COD_LIQUIDACION FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ID_CARGO 
BEFORE INSERT ON CARGOS 
FOR EACH ROW 
BEGIN
    SELECT SEQ_ID_CARGO.NEXTVAL INTO :NEW.ID_CARGO FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ID_DEPARTAMENTO 
BEFORE INSERT ON DEPARTAMENTOS 
FOR EACH ROW 
BEGIN
    SELECT SEQ_ID_DEPARTAMENTO.NEXTVAL INTO :NEW.ID_DEPARTAMENTO FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_COD_CONCEPTO 
BEFORE INSERT ON CONCEPTOS 
FOR EACH ROW 
BEGIN
    SELECT SEQ_COD_CONCEPTO.NEXTVAL INTO :NEW.COD_CONCEPTO FROM DUAL;
END;
/


-- Modificacion
ALTER TABLE EMPLEADOS ADD COLUMN ID_CARGO NUMBER(7);
ALTER TABLE EMPLEADOS ADD CONSTRAINT FK_EMPLEADOS_CARGO 
    FOREIGN KEY (ID_CARGO) REFERENCES CARGOS(ID_CARGO);
ALTER TABLE EMPLEADOS ADD COLUMN ID_DEPARTAMENTO NUMBER(7);
ALTER TABLE EMPLEADOS ADD CONSTRAINT FK_EMPLEADOS_DEPARTAMENTO 
    FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO);